/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.time.Instant;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.Month;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import pucrs.DataManager;
import pucrs.Product;
import pucrs.Review;
import pucrs.User;

/**
 *
 * @author Alan Quadros
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    
    DataManager dataManager;
    
    DefaultTableModel dtmAvaliacao = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Produto", "Rating", "Data/Hora", "Resumo", "Texto"}) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    DefaultTableModel dtmUsuarios = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"ID", "Nome", "Avaliações"}) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    DefaultTableModel dtmProdutos = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"ID", "Nome", "Preço", "Avaliações"}) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    public Principal() {
        initComponents();
        dataManager = new DataManager(); 
        dataManager.leitura();
        
        criaGrafico();
        
//        LocalDateTime inicio = LocalDateTime.of(2011, Month.MARCH, 1, 0,0);
//        LocalDateTime fim = LocalDateTime.of(2012, Month.JUNE, 28, 0,0);
//        
//        HashMap<LocalDateTime,Integer> hash = dataManager.assessmentsPerMonth(inicio,fim);
//        for (LocalDateTime meses : hash.keySet()) {
//            System.out.println(meses.getYear()+" - "+meses.getMonth()+" - "+hash.get(meses));
//            dataset.addValue(hash.get(meses), meses.getYear()+"/"+meses.getMonth(), "Mês/Ano");
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTableAvaliacao = new javax.swing.JScrollPane();
        jtableAvaliacoes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtfPesquisarAvaliacao = new javax.swing.JTextField();
        jbPesquisarAvaliacao = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jbUsuarioClassificacao = new javax.swing.JButton();
        jcomboIdNome = new javax.swing.JComboBox<String>();
        jbPesquisar = new javax.swing.JButton();
        jtfIdNome = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtableProdutos = new javax.swing.JTable();
        jbClassificacaoProdutos = new javax.swing.JButton();
        jcomboProdutos = new javax.swing.JComboBox<String>();
        jtfProdutos = new javax.swing.JTextField();
        jbPesquisarProdutos = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcomboMesInicialRevs = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jtfAnoInicialRevs = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcomboMesFinalRevs = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jtfAnoFinalRevs = new javax.swing.JTextField();
        jbPesquisarGraficosRevs = new javax.swing.JButton();
        jpanelGraficoRevs = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtableAvaliacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Rating", "Data/Hora", "Resumo", "Texto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAvaliacao.setViewportView(jtableAvaliacoes);

        jLabel1.setText("Termo");

        jbPesquisarAvaliacao.setText("Pesquisar");
        jbPesquisarAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarAvaliacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTableAvaliacao, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPesquisarAvaliacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPesquisarAvaliacao)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisarAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jbPesquisarAvaliacao))
                .addGap(10, 10, 10)
                .addComponent(jTableAvaliacao, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Avaliações", jPanel1);

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Avaliações"
            }
        ));
        jScrollPane2.setViewportView(jTableUsuarios);

        jbUsuarioClassificacao.setText("Classificação Usuários com Avaliações");
        jbUsuarioClassificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUsuarioClassificacaoActionPerformed(evt);
            }
        });

        jcomboIdNome.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Nome" }));

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jcomboIdNome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfIdNome, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbUsuarioClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbUsuarioClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomboIdNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar)
                    .addComponent(jtfIdNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Usuários", jPanel2);

        jtableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Preço", "Avaliações"
            }
        ));
        jtableProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jtableProdutos);

        jbClassificacaoProdutos.setText("Classificação de Produtos mais bem avaliados");
        jbClassificacaoProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClassificacaoProdutosActionPerformed(evt);
            }
        });

        jcomboProdutos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Nome" }));

        jbPesquisarProdutos.setText("Pesquisar");
        jbPesquisarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarProdutosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jcomboProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPesquisarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbClassificacaoProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbClassificacaoProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomboProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisarProdutos))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Produtos", jPanel3);

        jLabel2.setText("Mês inicial");

        jcomboMesInicialRevs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));

        jLabel3.setText("Ano inicial");

        jtfAnoInicialRevs.setText("1998");

        jLabel4.setText("Mês final");

        jcomboMesFinalRevs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));

        jLabel5.setText("Ano final");

        jtfAnoFinalRevs.setText("1999");

        jbPesquisarGraficosRevs.setText("Pesquisar");
        jbPesquisarGraficosRevs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarGraficosRevsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanelGraficoRevsLayout = new javax.swing.GroupLayout(jpanelGraficoRevs);
        jpanelGraficoRevs.setLayout(jpanelGraficoRevsLayout);
        jpanelGraficoRevsLayout.setHorizontalGroup(
            jpanelGraficoRevsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpanelGraficoRevsLayout.setVerticalGroup(
            jpanelGraficoRevsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpanelGraficoRevs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcomboMesInicialRevs, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfAnoInicialRevs)))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcomboMesFinalRevs, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfAnoFinalRevs)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbPesquisarGraficosRevs, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jcomboMesInicialRevs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jcomboMesFinalRevs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtfAnoInicialRevs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(jtfAnoFinalRevs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jbPesquisarGraficosRevs)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanelGraficoRevs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reviews mensais", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private CategoryDataset createDataset() { 
        DefaultCategoryDataset dataset = new DefaultCategoryDataset(); 
        
        String mesIni = (String) jcomboMesInicialRevs.getSelectedItem();
        
        String mesFim = (String) jcomboMesFinalRevs.getSelectedItem();
        
        LocalDateTime inicio = LocalDateTime.of(Integer.parseInt(jtfAnoInicialRevs.getText()), Month.valueOf(mesIni), 1, 0,0);
        LocalDateTime fim = LocalDateTime.of(Integer.parseInt(jtfAnoFinalRevs.getText()), Month.valueOf(mesFim), 28, 0,0);
        
        System.out.println(inicio);
        
        HashMap<LocalDateTime,Integer> hash = dataManager.assessmentsPerMonth(inicio,fim);
        System.out.println(hash);
        for (LocalDateTime meses : hash.keySet()) {
            //System.out.println(meses.getYear()+" - "+meses.getMonth()+" - "+hash.get(meses));
            dataset.addValue(hash.get(meses), meses.getYear()+"/"+meses.getMonth(), "Mês/Ano");
        }
        
        return dataset; 
    }
    
    public void criaGrafico() {
        CategoryDataset cds = createDataset();
        String titulo = "Reviews por Mês";
        String eixoy = "Reviewa";
        String txt_legenda = "Ledenda:";
        boolean legenda = true;
        boolean tooltips = true;
        boolean urls = true;
        JFreeChart graf = ChartFactory.createBarChart3D(titulo, txt_legenda, eixoy, cds, PlotOrientation.HORIZONTAL.VERTICAL, legenda, tooltips, urls);
        ChartPanel myChartPanel = new ChartPanel(graf, true);
        myChartPanel.setSize(jpanelGraficoRevs.getWidth(),jpanelGraficoRevs.getHeight());
        myChartPanel.setVisible(true); 
        jpanelGraficoRevs.removeAll();
        jpanelGraficoRevs.add(myChartPanel); 
        jpanelGraficoRevs.revalidate();
        jpanelGraficoRevs.repaint();                 
    }
    
    private void jbPesquisarAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarAvaliacaoActionPerformed
        
        ArrayList<Review> reviews = dataManager.searchReviewByString(jtfPesquisarAvaliacao.getText());        
        DefaultTableModel tab = (DefaultTableModel) jtableAvaliacoes.getModel();
        tab.setNumRows(0);
        
        for(Review rev : reviews){
            String productTitle = rev.getProducts().getTitle();
            String score = String.valueOf(rev.getScore());
            long time1 = rev.getTime();
            LocalDateTime time2 = LocalDateTime.ofInstant(Instant.ofEpochSecond(time1), ZoneOffset.UTC);
            String time = time2.getMonth()+"/"+time2.getYear();
            String summary = rev.getSummary();
            String text = rev.getText();
            
            tab.addRow(new String[] {productTitle, score, time, summary, text});
        }
        
    }//GEN-LAST:event_jbPesquisarAvaliacaoActionPerformed

    private void jbUsuarioClassificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUsuarioClassificacaoActionPerformed
                
        ArrayList<User> userReview = dataManager.getUsefulUsers();
        DefaultTableModel tab = (DefaultTableModel) jTableUsuarios.getModel();
        tab.setNumRows(0);
        
        for(User user : userReview){
            String id = user.getUserId();
            String nome = user.getProfileName();
            
            ArrayList<Review> reviews = dataManager.getReviewByUser(user);
            String revs = "";
            for(Review r : reviews){
                String rev = r.getText();
                revs = revs + rev + " / ";
            }
            
            tab.addRow(new String[] {id, nome, revs});
        }
    }//GEN-LAST:event_jbUsuarioClassificacaoActionPerformed

    private void jbClassificacaoProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClassificacaoProdutosActionPerformed
        
        ArrayList<Product> productsReviews = dataManager.getBestReviewed();
        DefaultTableModel tab = (DefaultTableModel) jtableProdutos.getModel();
        tab.setNumRows(0);
        
        for(Product product : productsReviews){
            String id = product.getProductId();
            String nome = product.getTitle();
            
            double price1 = product.getPrice();
            String price = "";
            if(price1 == Product.UNKOWN_PRICE){
                price = "Unkown Price";
            } else if(price1 == Product.UNDEFINED_PRICE){
                price = "Undefined Price";
            } else {
                price = String.valueOf(price1);
            }
            
            ArrayList<Review> reviews = dataManager.getReviewByProduct(product);
            String revs = "";
            double media = dataManager.averageReview(reviews);                    

            tab.addRow(new String[] {id, nome, price, String.valueOf(media)});
        }
    }//GEN-LAST:event_jbClassificacaoProdutosActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        User user;
        
        if(jcomboIdNome.getSelectedItem().equals("ID")){
            user =  dataManager.searchUserById(jtfIdNome.getText()); 
            DefaultTableModel tabUser = (DefaultTableModel) jTableUsuarios.getModel();
            tabUser.setNumRows(0);
            
            String id = user.getUserId();
            String nome = user.getProfileName();

            ArrayList<Review> revs = dataManager.getReviewByUser(user);

            String reviews = "";

            for(Review rev: revs){
                String review = rev.getText();
                reviews = reviews+review+" / ";
            }
            tabUser.addRow(new String[]{id, nome, reviews});

            System.out.println(id+"\n"+nome+"\n"+reviews);
        } else {
            user =  dataManager.searchUserByName(jtfIdNome.getText()); 
            DefaultTableModel tabUser = (DefaultTableModel) jTableUsuarios.getModel();
            tabUser.setNumRows(0);
            
            String id = user.getUserId();
            String nome = user.getProfileName();

            ArrayList<Review> revs = dataManager.getReviewByUser(user);
            String reviews = "";

            for(Review rev: revs){
                String review = rev.getText();
                reviews = reviews+review+"\n";
            }
            tabUser.addRow(new String[]{id, nome, reviews});
        }
        
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jbPesquisarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarProdutosActionPerformed
        
        if(jcomboProdutos.getSelectedItem().equals("ID")){
            Product product = dataManager.searchProductById(jtfProdutos.getText());
            DefaultTableModel tabProduct = (DefaultTableModel) jtableProdutos.getModel();
            tabProduct.setNumRows(0);       

            String id = product.getProductId();
            String nome = product.getTitle();        

            double price1 = product.getPrice();
            String price = "";

            System.out.println(price1);

            if(price1 == Product.UNKOWN_PRICE){
                price = "Unkown Price";
            } else if(price1 == Product.UNDEFINED_PRICE){
                price = "Undefined Price";
            } else {
                price = String.valueOf(price1);
            }

            ArrayList<Review> reviews = dataManager.getReviewByProduct(product);
            String revs = "";
            for(Review rev : reviews){
                String r = rev.getText();
                revs = revs + r + " \n ";
            }

            tabProduct.addRow(new String[] {id, nome, price, revs});

        } else {
            Product product = dataManager.searchProductByName(jtfProdutos.getText());
            DefaultTableModel tabProduct = (DefaultTableModel) jtableProdutos.getModel();
            tabProduct.setNumRows(0);        

            String id = product.getProductId();
            String nome = product.getTitle();
            double price1 = product.getPrice();
            String price = "";

            if(price1 == Product.UNKOWN_PRICE){
                price = "Unkown Price";
            } else if(price1 == Product.UNDEFINED_PRICE){
                price = "Undefined Price";
            } else {
                price = String.valueOf(price1);
            }

            ArrayList<Review> reviews = dataManager.getReviewByProduct(product);
            String revs = "";
            for(Review rev : reviews){
                String r = rev.getText();
                revs = revs + r + " \n ";
            }

            tabProduct.addRow(new String[] {id, nome, price, revs});
        }
    }//GEN-LAST:event_jbPesquisarProdutosActionPerformed

    private void jbPesquisarGraficosRevsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarGraficosRevsActionPerformed
        jcomboMesInicialRevs.getSelectedItem();
        jcomboMesFinalRevs.getSelectedItem();
        jtfAnoInicialRevs.getText();
        jtfAnoFinalRevs.getText();
        
        criaGrafico();
    }//GEN-LAST:event_jbPesquisarGraficosRevsActionPerformed

    


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane jTableAvaliacao;
    private javax.swing.JTable jTableUsuarios;
    private javax.swing.JButton jbClassificacaoProdutos;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbPesquisarAvaliacao;
    private javax.swing.JButton jbPesquisarGraficosRevs;
    private javax.swing.JButton jbPesquisarProdutos;
    private javax.swing.JButton jbUsuarioClassificacao;
    private javax.swing.JComboBox<String> jcomboIdNome;
    private javax.swing.JComboBox jcomboMesFinalRevs;
    private javax.swing.JComboBox jcomboMesInicialRevs;
    private javax.swing.JComboBox<String> jcomboProdutos;
    private javax.swing.JPanel jpanelGraficoRevs;
    private javax.swing.JTable jtableAvaliacoes;
    private javax.swing.JTable jtableProdutos;
    private javax.swing.JTextField jtfAnoFinalRevs;
    private javax.swing.JTextField jtfAnoInicialRevs;
    private javax.swing.JTextField jtfIdNome;
    private javax.swing.JTextField jtfPesquisarAvaliacao;
    private javax.swing.JTextField jtfProdutos;
    // End of variables declaration//GEN-END:variables
}
